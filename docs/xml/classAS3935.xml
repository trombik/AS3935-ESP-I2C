<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classAS3935" kind="class" language="C++" prot="public">
    <compoundname>AS3935</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAS3935_1a8e6af7fb0f6cdbc071e2f8a87963dcac" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::_address</definition>
        <argsstring></argsstring>
        <name>_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="43" column="1" bodyfile="src/AS3935.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAS3935_1a25e169c7c2c973c139d434aebab0801f" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::_interruptPin</definition>
        <argsstring></argsstring>
        <name>_interruptPin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="44" column="1" bodyfile="src/AS3935.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAS3935_1abccb9dabf620e753131e93922bb673ae" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t AS3935::_defaultSDA</definition>
        <argsstring></argsstring>
        <name>_defaultSDA</name>
        <initializer>= SDA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="45" column="1" bodyfile="src/AS3935.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAS3935_1abb9c5a6708b2aea26a46336ce2d8057a" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t AS3935::_defaultSCL</definition>
        <argsstring></argsstring>
        <name>_defaultSCL</name>
        <initializer>= SCL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="46" column="1" bodyfile="src/AS3935.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAS3935_1ac8546848906ceee3d8265eae7307695b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AS3935::AS3935</definition>
        <argsstring>(uint8_t address, uint8_t interruptPin)</argsstring>
        <name>AS3935</name>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>interruptPin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C address of <ref refid="classAS3935" kindref="compound">AS3935</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interruptPin</parametername>
</parameternamelist>
<parameterdescription>
<para>pin that is tied to IRQ pin of <ref refid="classAS3935" kindref="compound">AS3935</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="15" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a527270c68aac74d36d126a67ec684df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AS3935::~AS3935</definition>
        <argsstring>(void)</argsstring>
        <name>~AS3935</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a75542117963fb6a48f6bf257bca06c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::begin</definition>
        <argsstring>(void)</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Begin using the object with default SDA, and SCL pin numbers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="17" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a3ea6e01becd6faac61daf92ff6a8f7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::begin</definition>
        <argsstring>(int sda, int scl)</argsstring>
        <name>begin</name>
        <param>
          <type>int</type>
          <declname>sda</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Begin using the object</para><para><itemizedlist>
<listitem><para>Begin wire</para></listitem><listitem><para>Enable interrupt pin as INPUT</para></listitem><listitem><para>Disable Oscillators on interrupt pin.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sda</parametername>
</parameternamelist>
<parameterdescription>
<para>SDA pin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scl</parametername>
</parameternamelist>
<parameterdescription>
<para>SCL pin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="18" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a584f473e60e2a5c194cbf89b86f47827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::readRegister</definition>
        <argsstring>(uint8_t reg)</argsstring>
        <name>readRegister</name>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a byte from a register. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The register address </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value in the register </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="19" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="67" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a0f9456068c3bd92bfa08db7b3c0b95ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::readRegisterWithMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask)</argsstring>
        <name>readRegisterWithMask</name>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a byte from a register, return a masked and shifted value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The register address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask to use when shifting contents </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An uint8_t with the right most bits containing the masked and shifted contents of the requested register </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="20" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1aea1d2d14948ff505b237884ff34a7ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::writeRegisterWithMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask, uint8_t value)</argsstring>
        <name>writeRegisterWithMask</name>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a masked value to register reg, preserving other bits <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The register address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The bitmask to mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to the register </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="21" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a48b69ea6c7517619ccdf7a0b78cb670e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::writeRegister</definition>
        <argsstring>(uint8_t reg, uint8_t value)</argsstring>
        <name>writeRegister</name>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write value to register reg. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>the register address to write value to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write to the register. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="22" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1ada8b8b208c3247a580fd98f817d658f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::setDefault</definition>
        <argsstring>(void)</argsstring>
        <name>setDefault</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets all registers in default mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="23" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1ab0cfd4523be09c3e92d874472c8d0650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::calibrateRCO</definition>
        <argsstring>(void)</argsstring>
        <name>calibrateRCO</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calibrates the internal RC Oscillators automatically </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="24" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1affd3cfa6277c479da8e15d0f63c2240f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::disableOscillators</definition>
        <argsstring>(void)</argsstring>
        <name>disableOscillators</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable LCO/SRCO/TRCO on IRQ pin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="25" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1af8e6b140e4d495de1fde1586c9a037e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::getIntrruptReason</definition>
        <argsstring>(void)</argsstring>
        <name>getIntrruptReason</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get intrrupt reason <simplesect kind="return"><para>one of AS3935_INT_STRIKE, AS3935_INT_DISTURBER, AS3935_INT_NOISE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="26" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a7757e3320432cf7aa037a56a204d5946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t AS3935::getDistance</definition>
        <argsstring>(void)</argsstring>
        <name>getDistance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the estimated distance in km to the head of an approaching storm. <simplesect kind="return"><para>int8_t value of the estimated distance in km, AS3935_DISTANCE_OUT_OF_RANGE when out of range, or -1 when the register value is invalid. See also: 8.9.3 Statistical Distance Estimation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="27" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="159" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a0ffdb4dfbe9809c0132cee79ebc1bd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::isIndoor</definition>
        <argsstring>(void)</argsstring>
        <name>isIndoor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns bool whether or not current AFE setting is indoor. <simplesect kind="return"><para>true if the setting is indoor, false if not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="28" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a2dfca515cd05d3d8a2f21a63ecca9803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setIndoor</definition>
        <argsstring>(void)</argsstring>
        <name>setIndoor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set AFE setting to indoor mode <simplesect kind="return"><para>true or false whether if setting to indoor mode succeeded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="29" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a50d484a2b9cf94415a53f85a739956c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setIndoor</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setIndoor</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set or unset AFE setting to indoor mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True of false whether to set AFE to indoor mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false whether if setting to indoor mode succeeded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="30" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1ac9a95f6e666a87fac4f20d211af2fe50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::isOutdoor</definition>
        <argsstring>(void)</argsstring>
        <name>isOutdoor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns bool whether or not current AFE setting is outdoor. <simplesect kind="return"><para>true if the setting is outdoor, false if not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="31" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a3f069dc7019193600bf5e0c1fd8a700c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setOutdoor</definition>
        <argsstring>(void)</argsstring>
        <name>setOutdoor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the AFE setting to outdoor mode. <simplesect kind="return"><para>true or false whether if setting to outdoor mode succeeded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="32" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1aea4888bce6d95ecd15455eb5c646ecf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setOutdoor</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setOutdoor</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set or unset AFE setting to outdoor mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True of false whether to set AFE to outdoor mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false whether if setting to outdoor mode succeeded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="33" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1acb47e57b90db5fd7076e8f613c21d7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::getMinimumLightning</definition>
        <argsstring>(void)</argsstring>
        <name>getMinimumLightning</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get minimum number of lightning <simplesect kind="return"><para>uint8_t number of minimum number of lightning, one of 1, 5, 9, or 16. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="34" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="283" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a101cee8826bf70b18a50bfbbe2bd2133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setMinimumLightning</definition>
        <argsstring>(uint8_t)</argsstring>
        <name>setMinimumLightning</name>
        <param>
          <type>uint8_t</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set minimum number of lightning to trigger an event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of lightnings, one of 1, 5, 9, or 16. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool whether or not setting the value succeeded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="35" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="309" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a3d155965989392aaad3755a98e9f4bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AS3935::clearStats</definition>
        <argsstring>(void)</argsstring>
        <name>clearStats</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the statistics built up by the lightning distance estimation algorithm block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="36" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="322" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a27a053f6681f76fe822532796b32154b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::getNoiseFloor</definition>
        <argsstring>(void)</argsstring>
        <name>getNoiseFloor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get noise floor level from <ref refid="classAS3935" kindref="compound">AS3935</ref>. <simplesect kind="return"><para>The current noise floor level from the register </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="37" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1a423451d2316612a42e03ef51f601933f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AS3935::setNoiseFloor</definition>
        <argsstring>(int level)</argsstring>
        <name>setNoiseFloor</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set noise floor level from <ref refid="classAS3935" kindref="compound">AS3935</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The noise floor level, from 0 to 7, to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false whether if setting the level is succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="38" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="346" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1ae25cbdb28d34ccb7392c63bacd77f4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::increaseNoiseFloor</definition>
        <argsstring>(void)</argsstring>
        <name>increaseNoiseFloor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increase noise floor level by one. When the level raeches to the maximum value, 7, further call will not increase the level. <simplesect kind="return"><para>The noise floor level after the change. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="39" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="359" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classAS3935_1abbed826cf7f83a4d598e20e964620d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::descreseNoiseFloor</definition>
        <argsstring>(void)</argsstring>
        <name>descreseNoiseFloor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrease noise floor level by one. When the level raeches to the minimum value, 0, further call will not decrease the level. <simplesect kind="return"><para>The noise floor level after the change. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="40" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="371" bodyend="376"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classAS3935_1a800361ecee19c6413c96186efbaf37b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t AS3935::_getShift</definition>
        <argsstring>(uint8_t mask)</argsstring>
        <name>_getShift</name>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the shift required to make the mask use the LSB. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask to find the shift of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bit positions to shift the mask </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AS3935.h" line="47" column="1" bodyfile="src/AS3935_Wire.cpp" bodystart="54" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/AS3935.h" line="13" column="1" bodyfile="src/AS3935.h" bodystart="12" bodyend="48"/>
    <listofallmembers>
      <member refid="classAS3935_1a8e6af7fb0f6cdbc071e2f8a87963dcac" prot="private" virt="non-virtual"><scope>AS3935</scope><name>_address</name></member>
      <member refid="classAS3935_1abb9c5a6708b2aea26a46336ce2d8057a" prot="private" virt="non-virtual"><scope>AS3935</scope><name>_defaultSCL</name></member>
      <member refid="classAS3935_1abccb9dabf620e753131e93922bb673ae" prot="private" virt="non-virtual"><scope>AS3935</scope><name>_defaultSDA</name></member>
      <member refid="classAS3935_1a800361ecee19c6413c96186efbaf37b5" prot="private" virt="non-virtual"><scope>AS3935</scope><name>_getShift</name></member>
      <member refid="classAS3935_1a25e169c7c2c973c139d434aebab0801f" prot="private" virt="non-virtual"><scope>AS3935</scope><name>_interruptPin</name></member>
      <member refid="classAS3935_1ac8546848906ceee3d8265eae7307695b" prot="public" virt="non-virtual"><scope>AS3935</scope><name>AS3935</name></member>
      <member refid="classAS3935_1a75542117963fb6a48f6bf257bca06c41" prot="public" virt="non-virtual"><scope>AS3935</scope><name>begin</name></member>
      <member refid="classAS3935_1a3ea6e01becd6faac61daf92ff6a8f7d3" prot="public" virt="non-virtual"><scope>AS3935</scope><name>begin</name></member>
      <member refid="classAS3935_1ab0cfd4523be09c3e92d874472c8d0650" prot="public" virt="non-virtual"><scope>AS3935</scope><name>calibrateRCO</name></member>
      <member refid="classAS3935_1a3d155965989392aaad3755a98e9f4bcf" prot="public" virt="non-virtual"><scope>AS3935</scope><name>clearStats</name></member>
      <member refid="classAS3935_1abbed826cf7f83a4d598e20e964620d34" prot="public" virt="non-virtual"><scope>AS3935</scope><name>descreseNoiseFloor</name></member>
      <member refid="classAS3935_1affd3cfa6277c479da8e15d0f63c2240f" prot="public" virt="non-virtual"><scope>AS3935</scope><name>disableOscillators</name></member>
      <member refid="classAS3935_1a7757e3320432cf7aa037a56a204d5946" prot="public" virt="non-virtual"><scope>AS3935</scope><name>getDistance</name></member>
      <member refid="classAS3935_1af8e6b140e4d495de1fde1586c9a037e3" prot="public" virt="non-virtual"><scope>AS3935</scope><name>getIntrruptReason</name></member>
      <member refid="classAS3935_1acb47e57b90db5fd7076e8f613c21d7d3" prot="public" virt="non-virtual"><scope>AS3935</scope><name>getMinimumLightning</name></member>
      <member refid="classAS3935_1a27a053f6681f76fe822532796b32154b" prot="public" virt="non-virtual"><scope>AS3935</scope><name>getNoiseFloor</name></member>
      <member refid="classAS3935_1ae25cbdb28d34ccb7392c63bacd77f4c7" prot="public" virt="non-virtual"><scope>AS3935</scope><name>increaseNoiseFloor</name></member>
      <member refid="classAS3935_1a0ffdb4dfbe9809c0132cee79ebc1bd5d" prot="public" virt="non-virtual"><scope>AS3935</scope><name>isIndoor</name></member>
      <member refid="classAS3935_1ac9a95f6e666a87fac4f20d211af2fe50" prot="public" virt="non-virtual"><scope>AS3935</scope><name>isOutdoor</name></member>
      <member refid="classAS3935_1a584f473e60e2a5c194cbf89b86f47827" prot="public" virt="non-virtual"><scope>AS3935</scope><name>readRegister</name></member>
      <member refid="classAS3935_1a0f9456068c3bd92bfa08db7b3c0b95ef" prot="public" virt="non-virtual"><scope>AS3935</scope><name>readRegisterWithMask</name></member>
      <member refid="classAS3935_1ada8b8b208c3247a580fd98f817d658f1" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setDefault</name></member>
      <member refid="classAS3935_1a2dfca515cd05d3d8a2f21a63ecca9803" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setIndoor</name></member>
      <member refid="classAS3935_1a50d484a2b9cf94415a53f85a739956c7" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setIndoor</name></member>
      <member refid="classAS3935_1a101cee8826bf70b18a50bfbbe2bd2133" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setMinimumLightning</name></member>
      <member refid="classAS3935_1a423451d2316612a42e03ef51f601933f" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setNoiseFloor</name></member>
      <member refid="classAS3935_1a3f069dc7019193600bf5e0c1fd8a700c" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setOutdoor</name></member>
      <member refid="classAS3935_1aea4888bce6d95ecd15455eb5c646ecf5" prot="public" virt="non-virtual"><scope>AS3935</scope><name>setOutdoor</name></member>
      <member refid="classAS3935_1a48b69ea6c7517619ccdf7a0b78cb670e" prot="public" virt="non-virtual"><scope>AS3935</scope><name>writeRegister</name></member>
      <member refid="classAS3935_1aea1d2d14948ff505b237884ff34a7ac3" prot="public" virt="non-virtual"><scope>AS3935</scope><name>writeRegisterWithMask</name></member>
      <member refid="classAS3935_1a527270c68aac74d36d126a67ec684df4" prot="public" virt="non-virtual"><scope>AS3935</scope><name>~AS3935</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
